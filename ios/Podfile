require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'rn3' do
    config = use_native_modules!
    flags = get_default_flags()
    use_react_native!(
        :path => config[:reactNativePath],
        :hermes_enabled => flags[:hermes_enabled],
        :fabric_enabled => flags[:fabric_enabled],
        :app_path => "#{Pod::Config.instance.installation_root}/.."
    )
end

target 'extension' do
    exclude = [
        "@invertase/react-native-apple-authentication", 
        "react-native-bootsplash",
        "react-native-inappbrowser-reborn",
        "react-native-image-picker",
        "react-native-iap",
        "react-native-webview",
        "react-native-document-picker",
        "@react-native-google-signin/google-signin",
        "react-native-navigation-bar-color",
        "react-native-share",
        "react-native-quick-base64"
    ]

    # Remove unsused targets in extension
    exclude.each { |lib|
        FileUtils.mv("../node_modules/#{lib}", "../node_modules/#{lib}_")
    }

    config = use_native_modules!
    flags = get_default_flags()
    use_react_native!(
        :path => config[:reactNativePath],
        :hermes_enabled => flags[:hermes_enabled],
        :fabric_enabled => flags[:fabric_enabled],
        :app_path => "#{Pod::Config.instance.installation_root}/.."
    )

    # Restore unsused targets
    exclude.each { |lib|
        FileUtils.mv("../node_modules/#{lib}_", "../node_modules/#{lib}")
    }
end

#use_flipper!()

# Custom configuration
post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)

    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            # Fix App extension warnings
            config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
            
            # Same deployment target
            config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        end
    end
end