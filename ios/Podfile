require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
platform :ios, '11.0'

target 'rn3' do
    config = use_native_modules!
    use_react_native!(
        :path => config[:reactNativePath],
        :hermes_enabled => true
    )
    #use_flipper!
end

target 'extension' do
    config = use_native_modules!
    use_react_native!(
        :path => config[:reactNativePath],
        :hermes_enabled => true
    )
end

# Custom configuration
post_install do |installer|
    react_native_post_install(installer)

    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            # Fix App extension warnings
            config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
            # Same deployment target
            config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
        end

        # Remove unsused targets in extension
        if target.name == "Pods-extension"
            libs = ["AppAuth", "GoogleSignIn", "GTMAppAuth", "GTMSessionFetcher", "RNAppleAuthentication", "RNBootSplash", "RNGoogleSignin", "RNInAppBrowser", "RNImageCropPicker", "RNIap", "react-native-webview"]

            puts "Exclude unsused frameworks in #{target.name} target"
            
            target.build_configurations.each do |config|
                xcconfig_path = config.base_configuration_reference.real_path
                xcconfig = File.read(xcconfig_path)

                libs.each { |lib|
                    if xcconfig["#{lib}"]
                        puts "  - Remove '#{lib}' on target '#{target.name}'"
                        xcconfig.sub!("-framework \"#{lib}\"", '')
                        xcconfig.sub!("\"${PODS_ROOT}/#{lib}/Frameworks\"", '')
                        xcconfig.sub!("\"${PODS_ROOT}/Headers/Public/#{lib}\"", '')
                        xcconfig.sub!("\"${PODS_CONFIGURATION_BUILD_DIR}/#{lib}\"", '')
                        xcconfig.sub!("-l\"#{lib}\"", '')
                    end
                }

                new_xcconfig = xcconfig+""
                File.open(xcconfig_path, "w") { |file| file << new_xcconfig }
            end
        end
    end
end